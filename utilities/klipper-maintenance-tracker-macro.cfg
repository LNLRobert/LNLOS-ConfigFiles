[gcode_macro _MAINTENANCE_TRACKER]
variable_time_since_cleaning: 0
gcode:
    {% set svlnl = printer.save_variables.variables %}
    # Maintenance intervals in hours
    {% set EXTRUDER_CHANGE_INTERVAL = 50 %}
    {% set CLEANING_INTERVAL = 200 %}
    {% set DIMENSION_CALIBRATION_INTERVAL = 500 %}

    # Get the print time from the last completed print
    {% set last_print_time = printer.print_stats.print_duration / 3600 %}
    
    # Add the print time to total_print_time
    {% set new_total_print_time = svlnl.total_print_time + last_print_time %}

        

    SET_GCODE_VARIABLE MACRO=LNLOS VARIABLE=total_print_time VALUE={new_total_print_time}
    
    # Check each maintenance type
    {% set time_since_extruder_change = svlnl.last_extruder_change + last_print_time |float %}
    {% set time_since_cleaning = svlnl.last_cleaning + last_print_time |float %}
    {% set time_since_dimension_calibration = svlnl.last_dimension_calibration + last_print_time |float %}

        
    SET_GCODE_VARIABLE MACRO=LNLOS VARIABLE=last_extruder_change VALUE={time_since_extruder_change}
    SET_GCODE_VARIABLE MACRO=LNLOS VARIABLE=last_cleaning VALUE={time_since_cleaning}
    SET_GCODE_VARIABLE MACRO=LNLOS VARIABLE=last_dimension_calibration VALUE={time_since_dimension_calibration}
    
    # Prepare maintenance messages
    {% set messages = [] %}
    {% if time_since_extruder_change >= EXTRUDER_CHANGE_INTERVAL %}
        {% set messages = messages.append("EXTRUDER CHANGE required (%.2f hours overdue)" % (time_since_extruder_change - EXTRUDER_CHANGE_INTERVAL)) %}
    {% endif %}
    {% if time_since_cleaning >= CLEANING_INTERVAL %}
        {% set messages = messages.append("CLEANING required (%.2f hours overdue)" % (time_since_cleaning - CLEANING_INTERVAL)) %}
    {% endif %}
    {% if time_since_dimension_calibration >= DIMENSION_CALIBRATION_INTERVAL %}
        {% set messages = messages.append("DIMENSION CALIBRATION required (%.2f hours overdue)" % (time_since_dimension_calibration - DIMENSION_CALIBRATION_INTERVAL)) %}
    {% endif %}
    
    # Display maintenance status
    {% if messages %}
        { action_respond_info("MAINTENANCE REQUIRED:\\n" + "\\n".join(messages)) }
    {% else %}
        { action_respond_info("No maintenance required at this time.") }
    {% endif %}
    
    SAVE_VARIABLE VARIABLE=total_print_time VALUE={new_total_print_time}
    SAVE_VARIABLE VARIABLE=last_extruder_change VALUE={time_since_extruder_change}
    SAVE_VARIABLE VARIABLE=last_cleaning VALUE={time_since_cleaning}
    SAVE_VARIABLE VARIABLE=last_dimension_calibration VALUE={time_since_dimension_calibration}

    # Log the print time and maintenance status
    { action_respond_info("Last print duration: %.2f hours" % last_print_time) }
    { action_respond_info("Total print time: %.2f hours" % new_total_print_time) }
    { action_respond_info("Time since last extruder change: %.2f hours" % time_since_extruder_change) }
    { action_respond_info("Time since last cleaning: %.2f hours" % time_since_cleaning) }
    { action_respond_info("Time since last dimension calibration: %.2f hours" % time_since_dimension_calibration) }

[gcode_macro _RESET_MAINTENANCE]
gcode:
    {% set TASK = params.TASK|default("ALL")|upper %}
    {% if TASK in ["EXTRUDER", "ALL"] %}
        SET_GCODE_VARIABLE MACRO=LNLOS VARIABLE=last_extruder_change VALUE={printer["gcode_macro LNLOS"].total_print_time}
        RESPOND TYPE=echo MSG="Extruder Maintenance has been reset"
    {% endif %}
    {% if TASK in ["CLEANING", "ALL"] %}
        SET_GCODE_VARIABLE MACRO=LNLOS VARIABLE=last_cleaning VALUE={printer["gcode_macro LNLOS"].total_print_time}
        RESPOND TYPE=echo MSG="Cleaning Maintenance Has Been Reset"
    {% endif %}
    {% if TASK in ["DIMENSION", "ALL"] %}
        SET_GCODE_VARIABLE MACRO=LNLOS VARIABLE=last_dimension_calibration VALUE={printer["gcode_macro LNLOS"].total_print_time}
        RESPOND TYPE=echo MSG="Dimension Calibration Maintenance has been reset"
    {% endif %}
    { action_respond_info("%s maintenance timer(s) have been reset." % (TASK if TASK != "ALL" else "All")) }

