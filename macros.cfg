#####################################################################
#	Macros
#####################################################################
[include macros/klipper-maintenance-tracker-macro.cfg]
[include macros/idex.cfg]
[include macros/pidutilities.cfg]
[include macros/testspeed.cfg]
[include macros/LoadUnloadFilament.cfg]
[include macros/PrintStartEnd.cfg]

[include scripts/shellmacros.cfg]

[include utilities/LNLOSVariables.cfg]

############################################################
### MACHINE STARTUP ###
############################################################

[delayed_gcode _INITIALIZE]
initial_duration: 1
gcode:
  M117 Initializing...
  LNLOS
  _LOAD_LNLOS
  _BED_MESH_INIT
  M117 Ready...

[gcode_macro _BED_MESH_INIT]
gcode:
  M117 Loading Default Bedmesh...
  BED_MESH_PROFILE LOAD=default


############################################################
### PRINT START AND END ###
############################################################


### ------------------------------ ###
#todo: set temp wait upper and lower bounds as variables
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s-2} MAXIMUM={s+2}   ; Wait for hotend temp (within 1 degree)
    {% endif %}

[gcode_macro M190]
rename_existing: M99190
gcode:
    #Parameters
    {% set s = params.S|float %}

    M140 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}   ; Set bed temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM={s} MAXIMUM={s+1}  ; Wait for bed temp (within 1 degree)
    {% endif %}



#todo: m190 temperature wait conversion
############################################################
### PROBE CORE ###
############################################################

### ------------------------------ ###
[gcode_macro _PREP_Z_CALIBRATE]
description: Moves print head to a center of bed location
gcode:
  RESPOND TYPE=echo MSG="Moving Toolhead to position to perform Z calibrations"
  {% set xpos = printer["gcode_macro LNLOS"].z_calibrate_x|float %}
  {% set ypos = printer["gcode_macro LNLOS"].z_calibrate_y|float %}
  {% set zpos = printer["gcode_macro LNLOS"].z_calibrate_zlift|float %}
  HOME_IF_NOT
  G1 Z{zpos} F1050
  G1 X{xpos} Y{ypos} F12000
  RESPOND TYPE=echo MSG="Toolhead in position, ready to calibrate endstop or probe offset"

### ------------------------------ ###
[gcode_macro PROBEON]
gcode:
	SET_GCODE_VARIABLE MACRO=_bedmesh VARIABLE=probe_installed VALUE=1
	RESPOND MSG="Recorded that probe is currently attached"

### ------------------------------ ###
[gcode_macro probeoff]
gcode:
	SET_GCODE_VARIABLE MACRO=_bedmesh VARIABLE=probe_installed VALUE=0
	RESPOND MSG="Recorded that probe has been removed"



############################################################
### BED MESH ###
############################################################
### ------------------------------ ###
#[gcode_macro bed_mesh_calibrate]
#rename_existing: BED_MESH_CALIBRATE_BASE
#gcode:
#  {% if printer["gcode_macro _bedmesh"].probe_installed == 1 %}
#      BED_MESH_CALIBRATE_BASE
#  {% elif printer["gcode_macro _bedmesh"].probe_installed == 0  %}
#      RESPOND TYPE=error MSG="Probe does not seem to be installed, please install probe and rerun bedmesh"
#  {% endif %}

[gcode_macro _bedmesh]
variable_probe_installed: 0
gcode:
  {% if printer["gcode_macro _bedmesh"].probe_installed == 0 %}
	    RESPOND MSG="Install probe and run then command 'probeon'"
	{% else %}
		RESPOND MSG="Measuring bed mesh with TO, with zero x offset "
		HOME_IF_NOT
		T0
		SAVE_GCODE_STATE NAME=bedmesh
		#Always measure with raw left head
		G90
		SET_GCODE_OFFSET X=0 Y=0
		G0 Z10 F6000
		BED_MESH_CALIBRATE
		G0 Y0 Z100
		G28 X
		RESTORE_GCODE_STATE NAME=bedmesh
	{% endif %}

### ------------------------------ ###
[gcode_macro _BED_MESH_LOAD]
description: Load an existing bed calibration mesh for the correct temperature
gcode:
  ##### get target get temperature #####
  {% set bed_temp = printer.heater_bed.target|int %}
  ##### join everything to a single mesh name #####
  {% set mesh_name = "MESH-" + bed_temp|string + "C" %}
  ##### end of definitions #####
  {% if printer.configfile.config["bed_mesh " + mesh_name] is defined %}
    BED_MESH_PROFILE LOAD={mesh_name}
    RESPOND TYPE=echo MSG="Loaded bed mesh profile of {mesh_name} "
  {% else %}
    RESPOND TYPE=error MSG="Did not find a mesh profile of {mesh_name} "
  {% endif %}

### ------------------------------ ###
[gcode_macro _BEDMESH_RENEW]
gcode:
	home_if_not
	{% set dwell = 120000 %}
	{% for t in  [55,60,65,70,75,80,85] %}
    {% set mesh_name = "MESH-" + t|string + "C" %}
		RESPOND MSG="Heating the bed to {t} C"
		M190 S{t}
		RESPOND MSG="Settling for {dwell}ms"
		G4 P{dwell}
		bedmesh
		BED_MESH_PROFILE SAVE={mesh_name}
	{% endfor %}
	SAVE_CONFIG

############################################################
### HOMING AND PARKING ###
############################################################

### ------------------------------ ###
# home unit if not already, if homed will not move any axis
[gcode_macro HOME_IF_NOT]
gcode:
	{% if printer.toolhead.homed_axes != 'xyz' %}
	  G28
  {% endif %}

### ------------------------------ ###
[gcode_macro _TOOLHEAD_PARK_PAUSE_CANCEL]
gcode:
  G91
  G0 Z25

############################################################
### GENERAL UTILITY ###
############################################################

### ------------------------------ ###
#moves toolhead to a maintenance position
#todo: improve overall, allow input of specific extruder
[gcode_macro _MAKE_EXTRUDER_ACCESSIBLE]
gcode:
  G28
  G91
  G1 Z+100 F1000
  T0
  G1 X+150 F1750
  #T1
  #G1 X-150 F1750
  G90


[gcode_macro M601]
description: Call Pause if M601 gcode is used 
gcode:
  PAUSE